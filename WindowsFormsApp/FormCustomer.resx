<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAeAB4AAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCAC7AMoDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9PaKKKACiiigAooooAKKhvLy30+3e4upo7eBBlpJWCqPqTXl3
        ir9oLStNLw6Nbtqkw4858pCP6t+n1rpo4eriHanG55+MzDC4GPNiJqP5/Jbnq9ZmreJ9I0MH+0NStbQ/
        3ZZVDH6Dqa+ZfEHxY8T+Iiyy6i9rA3/LGz/dL9Mjk/iTXIMzOxZiWY8knkmvepZLJ61Z29D4jFcY04u2
        GpX83p+C/wAz6c1D46eErEkR3c94R/z7wN/NsCsO4/aP0hSfI0q9kH/TRkT+RNfP1FejHKMNHe7+f+R8
        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
</value>
  </data>
</root>